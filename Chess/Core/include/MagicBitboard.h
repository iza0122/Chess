#pragma once
#include "ChessDefinitons.h"

inline constexpr int rookShift[64] = {
	52, 53, 53, 53, 53, 53, 53, 52, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	53, 54, 54, 54, 54, 54, 54, 53, 
	52, 53, 53, 53, 53, 53, 53, 52
};

inline constexpr u64 rookMask[64] = {
	0x101010101017e, 0x202020202027c, 0x404040404047a, 0x8080808080876, 0x1010101010106e, 0x2020202020205e, 0x4040404040403e, 0x8080808080807e, 
	0x1010101017e00, 0x2020202027c00, 0x4040404047a00, 0x8080808087600, 0x10101010106e00, 0x20202020205e00, 0x40404040403e00, 0x80808080807e00,
	0x10101017e0100, 0x20202027c0200, 0x40404047a0400, 0x8080808760800, 0x101010106e1000, 0x202020205e2000, 0x404040403e4000, 0x808080807e8000,
	0x101017e010100, 0x202027c020200, 0x404047a040400, 0x8080876080800, 0x1010106e101000, 0x2020205e202000, 0x4040403e404000, 0x8080807e808000,
	0x1017e01010100, 0x2027c02020200, 0x4047a04040400, 0x8087608080800, 0x10106e10101000, 0x20205e20202000, 0x40403e40404000, 0x80807e80808000,
	0x17e0101010100, 0x27c0202020200, 0x47a0404040400, 0x8760808080800, 0x106e1010101000, 0x205e2020202000, 0x403e4040404000, 0x807e8080808000,
	0x7e010101010100, 0x7c020202020200, 0x7a040404040400, 0x76080808080800, 0x6e101010101000, 0x5e202020202000, 0x3e404040404000, 0x7e808080808000,
	0x7e01010101010100, 0x7c02020202020200, 0x7a04040404040400, 0x7608080808080800, 0x6e10101010101000, 0x5e20202020202000, 0x3e40404040404000, 0x7e80808080808000
};

inline constexpr u64 rookMagic[64] = {
    0x2380004000201080, 0x2040100020004001, 0x180086002100080, 0x4080048008021000, 0xa00086004100200, 0x80018004004200, 0x400640810030082, 0x4280014100102080,
    0x80a002600450080, 0x4005004004802100, 0x81004104102000, 0x3441000921021000, 0x2002010460008, 0x806001004020008, 0x3541002100140200, 0x25000260810002,
    0x800040042002d2, 0x10104000442000, 0x50028010802000, 0xf0008028001080, 0x8008008040080, 0x10100080c0002, 0xa00040002010890, 0xa42020000670084,
    0xc80084040002000, 0x200640005006, 0x51410100200091, 0x101c900201000, 0x21080100050010, 0x242001200190410, 0x1a1400081011, 0x1204200140091,
    0x1000400020800088, 0x1100442000401000, 0x204102001004100, 0x4006102202004008, 0x28010400800881, 0x80100040100081e, 0x101100e24000148,
    0x44004412000981, 0x480094220084000, 0x10200050024002, 0x61002000110042, 0x5005001890021, 0x8010500090010, 0x9000864010002, 0x501100142440008,
    0x12a040040820001, 0xa44408209002200, 0x1010084000200040, 0x208012004200, 0x2243001001900, 0x1022000810042200, 0x1c22000830040600, 0x800100508220400, 
    0x1000a44820300, 0x81430110800021, 0x80401100260082, 0x2001010830c1, 0x200210049045001, 0x42060088209c3042, 0x700a604001811, 0x80201100084, 0x168004a21040086
};

inline constexpr int bishopShift[64] = {
    58, 59, 59, 59, 59, 59, 59, 58,
    59, 59, 59, 59, 59, 59, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 59, 59, 59, 59, 59, 59,
    58, 59, 59, 59, 59, 59, 59, 58
};

inline constexpr u64 bishopMask[64] = {
    0x40201008040200, 0x402010080400, 0x4020100a00, 0x40221400, 0x2442800, 0x204085000, 0x20408102000, 0x2040810204000, 
    0x20100804020000, 0x40201008040000, 0x4020100a0000, 0x4022140000, 0x244280000, 0x20408500000, 0x2040810200000, 0x4081020400000, 
    0x10080402000200, 0x20100804000400, 0x4020100a000a00, 0x402214001400, 0x24428002800, 0x2040850005000, 0x4081020002000, 0x8102040004000, 
    0x8040200020400, 0x10080400040800, 0x20100a000a1000, 0x40221400142200, 0x2442800284400, 0x4085000500800, 0x8102000201000, 0x10204000402000, 
    0x4020002040800, 0x8040004081000, 0x100a000a102000, 0x22140014224000, 0x44280028440200, 0x8500050080400, 0x10200020100800, 0x20400040201000, 
    0x2000204081000, 0x4000408102000, 0xa000a10204000, 0x14001422400000, 0x28002844020000, 0x50005008040200, 0x20002010080400, 0x40004020100800, 
    0x20408102000, 0x40810204000, 0xa1020400000, 0x142240000000, 0x284402000000, 0x500804020000, 0x201008040200, 0x402010080400, 
    0x2040810204000, 0x4081020400000, 0xa102040000000, 0x14224000000000, 0x28440200000000, 0x50080402000000, 0x20100804020000, 0x40201008040200
};

inline constexpr u64 bishopMagic[64] = {
    0x504040402740101, 0x1c20020212202280, 0x28120042010280, 0x2048058500800850, 0x3904504000220851, 0x431042034000180, 0x802020202420114, 0x80221802011008, 
    0x20940e0430020201, 0x90040401840100, 0x221008a801002006, 0x72088a02012484, 0x10011040004000, 0x422128210400020, 0x100048844100c00, 0x4000044088c1000, 
    0x26102c0802300428, 0x428000403040400, 0x221000802040210, 0x1028809410008, 0x44002211040400, 0x4412000441102500, 0xa001102822000, 0x105201e301030100, 
    0x24400054303400, 0x4091480021080102, 0x540490c10010200, 0x4302040228010820, 0x821080461004004, 0x1001100088080a, 0x2006000880801, 0x42080a820100, 
    0x2104410d02000, 0x12121000201904, 0x42140204040800, 0x812200800210052, 0x40200c0400214102, 0x1080200002200, 0x40102204c0088, 0x85010120210400, 
    0x14018848404010, 0x20a0202012000, 0x3008049041002, 0x32a1082013000808, 0x900400301040210, 0x1140020243000610, 0x20420404400100, 0x104080140400100, 
    0x2a080148080800, 0x6020208410092009, 0x1120021100880112, 0x10490160880040, 0x200284803040001, 0x1009401801010000, 0x48020c081a0000, 0x302040134090062, 
    0x440020a802086004, 0x2160201041200, 0x200000201460800, 0x6009401001840410, 0x202000808610500, 0x10810104082, 0x8206004010150, 0x40040400820090
};


u64 rookBlockerMask(ui index);

u64 bishopBlockerMask(ui index);

uint64_t random_uint64();

uint64_t random_uint64_fewbits();

u64 findRookMagic(ui square);

u64 findBishopMagic(ui square);

u64 getRookAttack(int square, u64 occupancy);

u64 getBishopAttack(int square, u64 occupancy);

const std::vector<u64> rookAttackList(ui square);

const std::vector<u64> bishopAttackList(ui square);

const std::vector<std::vector<u64>> rookAttackTable();

const std::vector<std::vector<u64>> bishopAttackTable();

std::vector<u64> blockerBoard(const u64 &blockerMask);

